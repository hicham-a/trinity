#!/bin/sh
#-- Do not remove following line if you want to make use of CVS version tracking
#-- $Id: compute.postinstall,v 1.21 2008/09/04 12:05:45 sikorsky Exp $
#-- jurij.sikorsky@t-systems.cz
#--
#-- this script is run after all packages from $profile.pkglist are installed
#-- 
#-- it gets these arguments:
#-- 
#-- $1 = install root (chroot directory for profile)
#-- $2 = OS version
#-- $3 = architecture
#-- $4 = profile name
#-- $5 = work dir (where genimage is located)
#-- 
#-- 
installroot=$1
osver=$2
arch=$3
profile=$4
workdir=$5

#-- Example how /etc/fstab can be automatically generated during image generation:
cat <<END >$installroot/etc/fstab
proc            /proc    proc   rw 0 0
sysfs           /sys     sysfs  rw 0 0
devpts          /dev/pts devpts rw,gid=5,mode=620 0 0
controller:/cluster /cluster nfs rsize=8192,wsize=8192,timeo=14,intr
controller:/home/trinity /trinity nfs rsize=8192,wsize=8192,timeo=14,intr
controller:/home /home nfs rsize=8192,wsize=8192,timeo=14,intr
END

#-- Add slurm and munge users
#-- Make sure they have the same userids on controller!
#-- Alternatively, we can just copy /etc/passwd etc.
chroot $installroot useradd munge
chroot $installroot useradd slurm

#-- Enable services
chroot $installroot chkconfig rdma on
chroot $installroot chkconfig ntpd on
chroot $installroot chkconfig slurm on
chroot $installroot chkconfig munge on

#-- copy slurm and munge configuration files
install -D /etc/munge/munge.key -m600 $installroot/etc/munge/munge.key
chroot $installroot chown munge:munge /etc/munge/munge.key
install -D /etc/slurm/slurm.conf $installroot/etc/slurm/slurm.conf

#-- copy security limits from controller node
install -d $installroot/etc/security/limits.d
cp -Tr /etc/security/limits.d $installroot/etc/security/limits.d

#-- copy repositories from controller node
install -d $installroot/etc/yum.repos.d
cp -Tr /etc/yum.repos.d $installroot/etc/yum.repos.d

#-- copy modules environment config file
install -D /usr/share/Modules/init/.modulespath $installroot/usr/share/Modules/init/.modulespath

#-- setup ldap authentication against the controller
install -D /etc/nslcd.conf $installroot/etc/nslcd.conf
install -D /etc/nsswitch.conf $installroot/etc/nsswitch.conf
chroot $installroot chkconfig nslcd on
# authconfig did not work, so we just copied the affected config files.
install -D /etc/nsswitch.conf $installroot/etc/nsswitch.conf
install -d $installroot/etc/pam.d
cp -Tr /etc/pam.d $installroot/etc/pam.d
install -D /etc/pam_ldap.conf $installroot/etc/pam_ldap.conf

#-- Uncomment the line contains "cons" in /etc/inittab
#cons:12345:respawn:/sbin/smart_agetty -L 38400 console
#echo "co:2345:respawn:/sbin/agetty -L 38400 console" >> $installroot/etc/inittab


#-- Example of booted image versioning
#-- We want to know, with what configuration (version of the image) each node was booted.
#-- Hence, we keep image definition files and postscripts in CVS. During image generation we create file /etc/IMGVERSION and fill it with CVS "$Id$" of files with image definition (.pkglist, .exlist, .repolist, .postinstall). Then, during boot, each  "CVS enabled" postscript (see /install/postscripts/cvs_template.sh and /install/postscripts/cvs_template.pl) adds one line to /etc/IMGVERSION. Then you can determine in any time what image you are running and what postscipts in which versions were run.
#cat /dev/null > $installroot/etc/IMGVERSION
#for ext in pkglist exlist postinstall repolist; do
#  [ -r $workdir/$profile.$ext ] && cat $workdir/$profile.$ext | grep -E '^[[:space:]]*#.*[[:space:]]\$Id' >> $installroot/etc/IMGVERSION
#done

