#! /usr/bin/bash
##title          : cv_install_nova
##description    : Configures nova on a compute node.
##author         : Abhishek Mukherjee
##email          : abhishek.mukherjee@clustervision.com

# Get config info
source /trinity/nova/config.sh

# Main function
main(){
  # Parameters and constants
  NODE_IP=$(hostname -I| awk '{print $1}')

# Set SeLinux to permissive mode
  setenforce 0

# Stop NetworkManager  
  systemctl stop NetworkManager
  systemctl disable NetworkManager
  killall dhclient
  systemctl start network

  systemctl stop openstack-nova-compute.service openstack-nova-network.service openstack-nova-metadata-api.service

  if vgdisplay | grep nova-volumes ; then
    echo "Nova-volumes exist!"
  else
    # This part is very similar to cv_configure_storage 
    # Should eventually be replaced with a call to that script
    # Remove existing volume groups
    umount -a -t ext4
    for VG in $(vgs --noheadings | grep -v "No Volumes" | awk -F' ' '{print $1}'); do 
      vgchange -a n ${VG}
      vgremove -f ${VG}
    done

    #DISK=$(lsblk --noheadings --list --output KNAME,TYPE | awk '{if ($2 == "disk") print $1}' | sort | head -1)
    #AM: Use all disks
    DISKS=$(lsblk --noheadings --list --output KNAME,TYPE | awk '{if ($2 == "disk") print $1}')
    for DISK in ${DISKS}; do 
      dd if=/dev/zero of=/dev/${DISK} bs=512 count=1
      blockdev --rereadpt /dev/${DISK}   
      # Create the LVM physical volume:
      pvcreate /dev/${DISK}
    done 
    # Create the LVM volume group nova-volumes:
    vgcreate -f nova-volumes $(for DISK in ${DISKS}; do echo -n /dev/${DISK}; echo -n " " ; done)
    vgchange -a y nova-volumes
    lvcreate -l 90%VG -n nova-volume nova-volumes
    # Create a file system and initialize it from the image
    mkfs -t ext4 /dev/nova-volumes/nova-volume
    mkdir -p /tmp/var/lib/nova
    mount /dev/nova-volumes/nova-volume /tmp/var/lib/nova
    cp -rT /var/lib/nova /tmp/var/lib/nova
    umount /tmp/var/lib/nova

  fi
  echo "/dev/nova-volumes/nova-volume	/var/lib/nova 	ext4	defaults,errors=remount-ro  0  2" >> /etc/fstab 
  mount -a
  chown -R nova:nova /var/lib/nova

#-------------------------------------------------
# Configure the openstack-nova-compute component
#-------------------------------------------------
  echo "----Configuring openstack-nova-compute: editing /etc/nova/nova.conf----"  
  # Set up the message broker (rabbit_mq)
  # -- NOTE: The rpc_password needs to be identical to that in the openstack controller
  # -- NOTE: Please, ensure that the entries below are identical to that on the openstack controller
  #openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend rabbit
  openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend nova.openstack.common.rpc.impl_kombu
  openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_host  ${OPENSTACK_CONTROLLER}
  openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_password ${RPC_PASS}
  
  # set up the authentication service
  # -- NOTE: The admin_password needs to be identical to that in the openstack controller
  openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy keystone
  openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_uri http://${OPENSTACK_CONTROLLER}:5000/v2.0
  openstack-config --set /etc/nova/nova.conf keystone_authtoken identity_uri http://${OPENSTACK_CONTROLLER}:35357
  openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_tenant_name services
  openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_user nova
  openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_password ${NOVA_PASS}
  openstack-config --del /etc/nova/nova.conf keystone_authtoken auth_host
  openstack-config --del /etc/nova/nova.conf keystone_authtoken auth_port
  openstack-config --del /etc/nova/nova.conf keystone_authtoken auth_protocol
  
  # configure my_ip
  openstack-config --set /etc/nova/nova.conf DEFAULT my_ip ${NODE_IP}
  
  # setup remote console access
  openstack-config --set /etc/nova/nova.conf DEFAULT vnc_enabled True
  openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_lister 0.0.0.0
  openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_proxyclient_address ${NODE_IP}
  openstack-config --set /etc/nova/nova.conf DEFAULT novncproxy_base_url http://${OPENSTACK_CONTROLLER}:6080/vnc_auto.html
  
  # configure the location of the Image service
  openstack-config --set /etc/nova/nova.conf glance host ${OPENSTACK_CONTROLLER}
  
  # enable verbose logging
  openstack-config --set /etc/nova/nova.conf DEFAULT verbose True
  echo "-----------------------------------"  
  
  # Start virtualization and nova-compute
  systemctl restart libvirtd.service openstack-nova-compute.service
  systemctl enable  libvirtd.service openstack-nova-compute.service

#-------------------------------------------------
# Configure the openstack-nova-network component
#-------------------------------------------------
  echo "----Configuring openstack-nova-network: editing /etc/nova/nova.conf----"  
  # Parameters and constants
  read ETH1 ETH2 <<<$(ls /sys/class/net/ | grep "^e" | sort | head -2)

  openstack-config --set /etc/nova/nova.conf DEFAULT network_api_class  nova.network.api.API
  openstack-config --set /etc/nova/nova.conf DEFAULT security_group_api  nova
  openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver  nova.virt.libvirt.firewall.IptablesFirewallDriver
  openstack-config --set /etc/nova/nova.conf DEFAULT network_manager  nova.network.manager.FlatDHCPManager
  openstack-config --set /etc/nova/nova.conf DEFAULT network_size  254
  openstack-config --set /etc/nova/nova.conf DEFAULT allow_same_net_traffic  False
  openstack-config --set /etc/nova/nova.conf DEFAULT multi_host  True
  openstack-config --set /etc/nova/nova.conf DEFAULT send_arp_for_ha  True
  openstack-config --set /etc/nova/nova.conf DEFAULT share_dhcp_address  True
  openstack-config --set /etc/nova/nova.conf DEFAULT force_dhcp_release  True
  openstack-config --set /etc/nova/nova.conf DEFAULT flat_network_bridge  br100
  openstack-config --set /etc/nova/nova.conf DEFAULT flat_interface  ${ETH2}
  openstack-config --set /etc/nova/nova.conf DEFAULT public_interface  ${ETH1}
  echo "-----------------------------------"  

  systemctl enable openstack-nova-network.service 
  systemctl start openstack-nova-network.service  
  systemctl enable openstack-nova-metadata-api.service
  systemctl start openstack-nova-metadata-api.service  

}


# Main script
main "$@"

