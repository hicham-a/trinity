#! /usr/bin/bash
##title          : cv_install_cinder
##description    : Configures cinder on the storage node.
##author         : Abhishek Mukherjee
##email          : abhishek.mukherjee@clustervision.com

# Get config info and helper functions
source /trinity/cinder/config

# Main function
main(){
  # Parameters and constants
  NODE_IP=$(hostname -I| awk '{print $1}')
  
  echo "---- Configuring LVM ---"
  #AM: Packages installed by the pkglist
  #package_list=(
  #lvm2
  #)
  #install_packages package_list
  systemctl enable lvm2-lvmetad.service
  systemctl start lvm2-lvmetad.service
  
  # TODO: Do we also need to modify lvm.conf?
  # TOTO: Add a partition table if necessary
  if vgdisplay | grep cinder-volumes ; then
    echo "Cinder-volumes exist!"
  else
    # Remove existing volume groups
    umount -a -t ext4
    for VG in $(vgs --noheadings | grep -v "No Volumes" | awk -F' ' '{print $1}'); do 
      vgchange -a n ${VG}
      vgremove -f ${VG}
    done

    DISK=$(lsblk --noheadings --list --output KNAME,TYPE | awk '{if ($2 == "disk") print $1}' | sort | head -1)
    dd if=/dev/zero of=/dev/${DISK} bs=512 count=1
    blockdev --rereadpt /dev/${DISK}   
    # Create the LVM physical volume:
    pvcreate /dev/${DISK}
    # Create the LVM volume group cinder-volumes:
    vgcreate cinder-volumes /dev/${DISK}
  fi

  
  echo "--- Configuring OpenStack Cinder ---- "
  #AM: Packages installed by the pkglist
  #package_list=(
  #epel-release 
  #targetcli
  #python-oslo-db
  #MySQL-python
  #openstack-utils
  #openstack-cinder
  #)
  # install_packages ${package_list}
  
  echo "--- Editing /etc/cinder/cinder.conf"
  # Set up access to the backend database
  openstack-config --set /etc/cinder/cinder.conf database connection mysql://cinder:${CINDER_DBPASS}@${OPENSTACK_CONTROLLER}/cinder
  
  # Set up the message broker (rabbit_mq)
 # # -- NOTE: The rpc_password needs to be identical to that in the openstack controller
  openstack-config --set /etc/cinder/cinder.conf DEFAULT rpc_backend rabbit
  openstack-config --set /etc/cinder/cinder.conf DEFAULT rabbit_host  ${OPENSTACK_CONTROLLER}
  openstack-config --set /etc/cinder/cinder.conf DEFAULT rabbit_password ${RPC_PASS}
  
  # set up the authentication service
  # -- NOTE: The admin_password needs to be identical to that in the openstack controller
  openstack-config --set /etc/cinder/cinder.conf DEFAULT auth_strategy keystone
  openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_uri http://${OPENSTACK_CONTROLLER}:5000/v2.0
  openstack-config --set /etc/cinder/cinder.conf keystone_authtoken identity_uri http://${OPENSTACK_CONTROLLER}:35357
  openstack-config --set /etc/cinder/cinder.conf keystone_authtoken admin_tenant_name services
  openstack-config --set /etc/cinder/cinder.conf keystone_authtoken admin_user cinder
  openstack-config --set /etc/cinder/cinder.conf keystone_authtoken admin_password ${CINDER_PASS}
  openstack-config --del /etc/cinder/cinder.conf keystone_authtoken auth_host
  openstack-config --del /etc/cinder/cinder.conf keystone_authtoken auth_port
  openstack-config --del /etc/cinder/cinder.conf keystone_authtoken auth_protocol
  
  # configure my_ip
  openstack-config --set /etc/cinder/cinder.conf DEFAULT my_ip ${NODE_IP}
  
  # configure cinder to use lioadm iSCSI service
  openstack-config --set /etc/cinder/cinder.conf DEFAULT iscsi_helper lioadm
  
  # configure the location of the Image service
  openstack-config --set /etc/cinder/cinder.conf glance host ${OPENSTACK_CONTROLLER}
  
  # enable verbose logging
  openstack-config --set /etc/cinder/cinder.conf DEFAULT verbose True
  echo "-----------------------------------"  
  
  systemctl enable openstack-cinder-volume.service target.service
  systemctl start openstack-cinder-volume.service target.service
}

# Main script
#AM: All log info fwd to /var/log/xcat/xcat.log
# start_logging ${LOGFILE}
#print_header "$(basename $0)"
main "$@"
#print_tail "$(basename $0)"
